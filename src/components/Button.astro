---
import { twMerge } from "tailwind-merge";
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";

const button = cva("button",
  {
    variants: {
      intent: {
        primary: [
          "bg-blue-500",
          "text-white",
          "border-transparent",
          "hover:bg-blue-600",
        ],
        secondary: [
          "bg-white",
          "text-gray-800",
          "border-gray-400",
          "hover:bg-gray-100",
        ],
        icon: [
          "ring-accent2",
          "hover:scale-105",
          "rounded-full",
        ],
      },
      size: {
        xsmall: ["text-sm", "p-1"],
        small: ["text-sm", "py-1", "px-2"],
        medium: ["text-base", "py-2", "px-4"],
      },
    },
    compoundVariants: [
      { intent: "primary", size: "medium", class: "uppercase" },
    ],
  }
);

export interface Props
  extends HTMLAttributes<"button">,
    VariantProps<typeof button> {
        classes?: string;
}

/**
 * For Astro components, we recommend setting your defaultVariants within
 * Astro.props (which are `undefined` by default)
 */
const { intent = "primary", size = "medium", classes, ...rest } = Astro.props;
---

<button class:list={twMerge(button({intent, size}), classes)} {...rest}>
  <slot />
</button>